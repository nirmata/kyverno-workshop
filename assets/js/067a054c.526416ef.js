"use strict";(self.webpackChunkkyverno_workshop=self.webpackChunkkyverno_workshop||[]).push([[909],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,d=u["".concat(s,".").concat(m)]||u[m]||k[m]||l;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>k,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const l={},a="Module 1: Installation & Policy Overview",i={unversionedId:"module1/README",id:"module1/README",title:"Module 1: Installation & Policy Overview",description:"In this lab, you will build the necessary environment in order to set the foundation for",source:"@site/docs/module1/README.md",sourceDirName:"module1",slug:"/module1/",permalink:"/kyverno-workshop/docs/module1/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kyverno Workshop",permalink:"/kyverno-workshop/docs/"},next:{title:"Module 2: Kubernetes Best Practices using Kyverno",permalink:"/kyverno-workshop/docs/module2/"}},s={},p=[{value:"Task 1",id:"task-1",level:2},{value:"Task 2",id:"task-2",level:2}],c={toc:p},u="wrapper";function k(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"module-1-installation--policy-overview"},"Module 1: Installation & Policy Overview"),(0,o.kt)("p",null,"In this lab, you will build the necessary environment in order to set the foundation for\nfuture labs. Specifically, you will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new Kubernetes cluster"),(0,o.kt)("li",{parentName:"ol"},"Add the Kyverno Helm repository"),(0,o.kt)("li",{parentName:"ol"},"Install Kyverno"),(0,o.kt)("li",{parentName:"ol"},"Inspect some key Kyverno CustomResourceDefinitions (CRDs) corresponding to policies")),(0,o.kt)("h2",{id:"task-1"},"Task 1"),(0,o.kt)("p",null,"Create a Kubernetes cluster. You may use any software with which you feel most comfortable, however this course\nprovides steps for kind."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"kind create cluster --name kyverno\n")),(0,o.kt)("p",null,"Add the Kyverno Helm repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"helm repo add kyverno https://kyverno.github.io/kyverno/\n")),(0,o.kt)("p",null,"Update your repos to fetch the latest chart versions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"helm repo update\n")),(0,o.kt)("p",null,"Install the Kyverno chart with a single replica in your lab environment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"helm install kyverno kyverno/kyverno -n kyverno --create-namespace\n")),(0,o.kt)("p",null,"Set your alias to kubectl to save on typing. This step is optional, however\nsubsequent commands given throughout this course will use ",(0,o.kt)("inlineCode",{parentName:"p"},"k")," to alias ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"alias k=kubectl\n")),(0,o.kt)("p",null,"Check the status and ensure the Kyverno Pod is running"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"k get po -n kyverno\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"task-2"},"Task 2"),(0,o.kt)("p",null,"Inspect all the CRDs Kyverno creates"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"k get crd | grep kyverno\n")),(0,o.kt)("p",null,"Explore a ClusterPolicy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"k explain clusterpolicy\n\nk explain clusterpolicy.spec\n")),(0,o.kt)("p",null,"See all the possibilities in a ",(0,o.kt)("inlineCode",{parentName:"p"},"match")," block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"k explain clusterpolicy.spec.rules.match.any --recursive\n")),(0,o.kt)("p",null,"Inspect the sample policy ",(0,o.kt)("inlineCode",{parentName:"p"},"clusterpolicy.yaml")," manifest and answer the following questions:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"What type of policy is this, Policy or ClusterPolicy?"),(0,o.kt)("li",{parentName:"ol"},"How many rules does it contain?"),(0,o.kt)("li",{parentName:"ol"},"What type of Kubernetes resource (kind) does each rule target?"),(0,o.kt)("li",{parentName:"ol"},"Would the first rule apply to the given resource kind if it carried the label ",(0,o.kt)("inlineCode",{parentName:"li"},"app=minor"),"?"),(0,o.kt)("li",{parentName:"ol"},"Would the second rule apply if the matching resource was located in a Namespace containing the label ",(0,o.kt)("inlineCode",{parentName:"li"},"zone=region-c"),"?")))}k.isMDXComponent=!0}}]);